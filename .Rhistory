library(evsim)
library(purrr)
# For workdays time cycle
workdays_parameters <- dplyr::tibble(
profile = c("Worktime", "Visit"),
ratio = c(50, 50),
start_mean = c(9, 11),
start_sd = c(1, 4),
duration_mean = c(8, 4),
duration_sd = c(0.5, 2),
energy_mean = c(15, 6),
energy_sd = c(4, 3)
)
# For weekends time cycle
weekends_parameters <- dplyr::tibble(
profile = "Visit",
ratio = 100,
start_mean = 12,
start_sd = 4,
duration_mean = 3,
duration_sd = 2,
energy_mean = 4,
energy_sd = 4
)
parameters_lst <- list(workdays_parameters, weekends_parameters)
# Get the whole model
ev_model <- get_custom_ev_model(
names = c("Workdays", "Weekends"),
months_lst = list(1:12, 1:12),
wdays_lst = list(1:5, 6:7),
parameters_lst = parameters_lst,
connection_log = FALSE,
energy_log = FALSE,
data_tz = "Europe/Amsterdam"
)
set.seed(12345)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(10, 10)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = seq.Date(from = dmy("05-08-2024"), to = dmy("05-08-2024")+days(2), by = "day"),
resolution = 15
)
print(ev_sessions)
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
grid_capacity <- 12
opt_data <- tibble(
datetime = ev_demand$datetime, # Same date-time sequence than the demand
Worktime = grid_capacity - ev_demand$Visit
)
opt_data %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 200) %>%
dySeries("Worktime", "Worktime free capacity", color = "navy", strokeWidth = 2, strokePattern = "dashed") %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
set.seed(1234)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 1),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
set.seed(123)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(10, 10)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = seq.Date(from = dmy("05-08-2024"), to = dmy("05-08-2024")+days(2), by = "day"),
resolution = 15
)
print(ev_sessions)
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
set.seed(1234)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(10, 10)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = seq.Date(from = dmy("05-08-2024"), to = dmy("05-08-2024")+days(2), by = "day"),
resolution = 15
)
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
grid_capacity <- 12
opt_data <- tibble(
datetime = ev_demand$datetime, # Same date-time sequence than the demand
Worktime = grid_capacity - ev_demand$Visit
)
opt_data %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 200) %>%
dySeries("Worktime", "Worktime free capacity", color = "navy", strokeWidth = 2, strokePattern = "dashed") %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 1),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 1),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.8, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.85, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.9, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.8, Visit = 1),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.9, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
library(flextools)
pkgdown::build_site()
library(flextools)
# devtools::load_all()
library(dplyr)
library(lubridate)
library(dygraphs)
library(dutils)
library(ggplot2)
library(evsim)
library(purrr)
# For workdays time cycle
workdays_parameters <- dplyr::tibble(
profile = c("Worktime", "Visit"),
ratio = c(50, 50),
start_mean = c(9, 11),
start_sd = c(1, 4),
duration_mean = c(8, 4),
duration_sd = c(0.5, 2),
energy_mean = c(15, 6),
energy_sd = c(4, 3)
)
# For weekends time cycle
weekends_parameters <- dplyr::tibble(
profile = "Visit",
ratio = 100,
start_mean = 12,
start_sd = 4,
duration_mean = 3,
duration_sd = 2,
energy_mean = 4,
energy_sd = 4
)
parameters_lst <- list(workdays_parameters, weekends_parameters)
# Get the whole model
ev_model <- get_custom_ev_model(
names = c("Workdays", "Weekends"),
months_lst = list(1:12, 1:12),
wdays_lst = list(1:5, 6:7),
parameters_lst = parameters_lst,
connection_log = FALSE,
energy_log = FALSE,
data_tz = "Europe/Amsterdam"
)
set.seed(1234)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(10, 10)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = seq.Date(from = dmy("05-08-2024"), to = dmy("05-08-2024")+days(2), by = "day"),
resolution = 15
)
print(ev_sessions)
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
grid_capacity <- 12
opt_data <- tibble(
datetime = ev_demand$datetime, # Same date-time sequence than the demand
Worktime = grid_capacity - ev_demand$Visit
)
opt_data %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 200) %>%
dySeries("Worktime", "Worktime free capacity", color = "navy", strokeWidth = 2, strokePattern = "dashed") %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
library(flextools)
# devtools::load_all()
library(dplyr)
library(lubridate)
library(dygraphs)
library(dutils)
library(ggplot2)
library(evsim)
library(purrr)
# For workdays time cycle
workdays_parameters <- dplyr::tibble(
profile = c("Worktime", "Visit"),
ratio = c(50, 50),
start_mean = c(9, 11),
start_sd = c(1, 4),
duration_mean = c(8, 4),
duration_sd = c(0.5, 2),
energy_mean = c(15, 6),
energy_sd = c(4, 3)
)
# For weekends time cycle
weekends_parameters <- dplyr::tibble(
profile = "Visit",
ratio = 100,
start_mean = 12,
start_sd = 4,
duration_mean = 3,
duration_sd = 2,
energy_mean = 4,
energy_sd = 4
)
parameters_lst <- list(workdays_parameters, weekends_parameters)
# Get the whole model
ev_model <- get_custom_ev_model(
names = c("Workdays", "Weekends"),
months_lst = list(1:12, 1:12),
wdays_lst = list(1:5, 6:7),
parameters_lst = parameters_lst,
connection_log = FALSE,
energy_log = FALSE,
data_tz = "Europe/Amsterdam"
)
set.seed(1234)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(10, 10)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = seq.Date(from = dmy("05-08-2024"), to = dmy("05-08-2024")+days(2), by = "day"),
resolution = 15
)
ev_sessions
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
ev_sessions %>% readr::write_csv("vignettes/sessions_user_profiles.csv")
ev_sessions <- readr::read_csv("sessions_user_profiles.csv") %>%
mutate_if(is.timepoint, with_tz, "Europe/Amsterdam")
print(ev_sessions)
ev_demand <- ev_sessions %>%
get_demand(by = "Profile")
ev_demand %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T)
grid_capacity <- 12
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
grid_capacity <- 12
opt_data <- tibble(
datetime = ev_demand$datetime, # Same date-time sequence than the demand
Worktime = grid_capacity - ev_demand$Visit
)
opt_data %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 200) %>%
dySeries("Worktime", "Worktime free capacity", color = "navy", strokeWidth = 2, strokePattern = "dashed") %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
)
list(
Workdays = list(Worktime = 0.6, Visit = 0.3),
Weekends = list(Visit = 0.6)
)
ev_sessions$Timecycle %>% unique
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.6, Visit = 0.3)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data,
opt_objective = "none",
method = "curtail",
window_days = 1,
window_start_hour = 6,
responsive = list(
Workdays = list(Worktime = 0.9, Visit = 0.3)
)
)
ev_demand_opt <- sc_results$sessions %>%
get_demand(by = "Profile")
ev_demand_opt %>%
filter(date(datetime) < dmy("07-08-2024")) %>%
dyplot(ylab = "Power demand (kW)", stackedGraph = T, fillGraph = T, legend_width = 150) %>%
dyLimit(grid_capacity, "Grid capacity", color = "red")
pkgdown::build_site()

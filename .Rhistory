ev_demand %>%
aggregate_timeseries("original") %>%
mutate(
setpoint = sc_results$setpoints$HomeEV,
postpone =  sc_results$postpone$sessions %>%
get_demand() %>% .[[2]],
interrupt = sc_results$interrupt$sessions %>%
get_demand() %>% .[[2]],
curtail =  sc_results$curtail$sessions %>%
get_demand() %>% .[[2]],
)
ev_demand %>%
aggregate_timeseries("original") %>%
mutate(
setpoint = sc_results$postpone$setpoints$HomeEV,
postpone =  sc_results$postpone$sessions %>%
get_demand() %>% .[[2]],
interrupt = sc_results$interrupt$sessions %>%
get_demand() %>% .[[2]],
curtail =  sc_results$curtail$sessions %>%
get_demand() %>% .[[2]],
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed")
sc_results$postpone$setpoints
ev_demand
ev_demand_opt <- sc_results$sessions %>%
get_demand()
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6,
energy_min = 0.5
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
ev_demand
ev_demand
ev_demand %>%
aggregate_timeseries("original")
sc_results$postpone$setpoints$HomeEV
sc_results <- map(
set_names(c("postpone", "interrupt", "curtail")),
~ ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = .x,
window_days = 1,
window_start_hour = 6
)
)
opt_data
opt_data
opt_data$datetime %>% max
480/24/4
ev_demand
ev_demand$datetime %>% max
unique(date(opt_data$datetime)
)
set.seed(1234)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(5, 5)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = unique(date(opt_data$datetime)),
resolution = 15
) %>%
filter(Profile == "HomeEV")
ev_demand <- get_demand(ev_sessions)
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
set.seed(1234)
ev_sessions <- simulate_sessions(
evmodel = ev_model,
sessions_day = tibble(time_cycle = c("Workdays", "Weekends"), n_sessions = c(5, 5)),
user_profiles = NULL,
charging_powers = tibble(power = 3.7, ratio = 1),
dates = unique(date(opt_data$datetime))[1:3],
resolution = 15
) %>%
filter(Profile == "HomeEV")
ev_demand <- get_demand(ev_sessions)
ev_demand %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2)
opt_data %>%
left_join(ev_demand) %>%
select(-starts_with("price")) %>%
dyplot() %>%
dyAxis("y", "Power (kW)") %>%
dySeries("production", "Production", "orange") %>%
# dySeries("building", "Building", "navy") %>%
# dySeries("HomeEV", "Electric vehicles", "brown") %>%
dyStackedRibbonGroup(c("HomeEV","building"), color = c("brown", "navy")) %>%
dyOptions(strokeWidth = 2)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6,
energy_min = 0.5
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6,
energy_min = 0.5
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
sc_results <- map(
set_names(c("postpone", "interrupt", "curtail")),
~ ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = .x,
window_days = 1,
window_start_hour = 6
)
)
ev_demand %>%
aggregate_timeseries("original") %>%
mutate(
setpoint = sc_results$postpone$setpoints$HomeEV,
postpone =  sc_results$postpone$sessions %>%
get_demand() %>% .[[2]],
interrupt = sc_results$interrupt$sessions %>%
get_demand() %>% .[[2]],
curtail =  sc_results$curtail$sessions %>%
get_demand() %>% .[[2]],
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed")
sc_results$postpone$setpoints
ev_demand
ev_demand %>%
aggregate_timeseries("original") %>%
left_join(
sc_results$postpone$setpoints %>% rename(setpoint = HomeEV),
by = "datetime"
) %>%
mutate(
postpone =  sc_results$postpone$sessions %>%
get_demand() %>% .[[2]],
interrupt = sc_results$interrupt$sessions %>%
get_demand() %>% .[[2]],
curtail =  sc_results$curtail$sessions %>%
get_demand() %>% .[[2]],
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed")
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "curtail",
window_days = 1,
window_start_hour = 6
)
ev_demand_opt <- sc_results$sessions %>%
get_demand()
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
head(sc_results$sessions)
head(sc_results$setpoints)
ev_demand %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2) %>%
dySeries("HomeEV", "HomeEV setpoint", color = "black", strokePattern = "dashed")
sc_results$setpoints %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2) %>%
dySeries("HomeEV", "HomeEV setpoint", color = "black", strokePattern = "dashed")
flextools::get_energy_balance()
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
mutate(
consumption = building + setpoint
) %>%
get_energy_balance() %>%
select(datetime, consumption, production) %>%
dyAxis("y", "Power (kW)") %>%
dySeries("production", "Production", "orange") %>%
dySeries("consumption", "Consumption", "navy") %>%
dySeries("net", "Net power", "brown") %>%
dyOptions(strokeWidth = 2)
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
mutate(
consumption = building + setpoint
) %>%
get_energy_balance() %>%
select(datetime, consumption, production, net) %>%
dyAxis("y", "Power (kW)") %>%
dySeries("production", "Production", color = "orange") %>%
dySeries("consumption", "Consumption",  color = "navy") %>%
dySeries("net", "Net power", color = "brown") %>%
dyOptions(strokeWidth = 2)
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
mutate(
consumption = building + setpoint
) %>%
get_energy_balance() %>%
select(datetime, consumption, production, net)
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
mutate(
consumption = building + setpoint
) %>%
get_energy_balance() %>%
select(datetime, consumption, production,) %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2) %>%
dySeries("production", "Production", color = "orange") %>%
dySeries("consumption", "Consumption",  color = "navy") %>%
dySeries("net", "Net power", color = "brown")
opt_data %>%
select(datetime, building, production) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
mutate(
consumption = building + setpoint
) %>%
get_energy_balance() %>%
select(datetime, consumption, production, net) %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2) %>%
dySeries("production", "Production", color = "orange") %>%
dySeries("consumption", "Consumption",  color = "navy") %>%
dySeries("net", "Net power", color = "brown")
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
left_join(
ev_demand_opt %>% rename(scheduled = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed") %>%
dySeries("scheduled", "Scheduled HomeEV", color = "navy", fillGraph = T)
ev_demand %>%
rename(original = HomeEV) %>%
left_join(
sc_results$setpoints %>% rename(setpoint = HomeEV)
) %>%
dyplot(ylab = "Power demand (kW)", fillGraph = T, strokeWidth = 2) %>%
dySeries("original", "HomeEV Original", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "HomeEV setpoint", color = "black", strokePattern = "dashed")
sc_results <- map(
set_names(c("postpone", "interrupt", "curtail")),
~ ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = .x,
window_days = 1,
window_start_hour = 6
)
)
ev_demand %>%
aggregate_timeseries("original") %>%
left_join(
sc_results$postpone$setpoints %>% rename(setpoint = HomeEV),
by = "datetime"
) %>%
mutate(
postpone =  sc_results$postpone$sessions %>%
get_demand() %>% .[[2]],
interrupt = sc_results$interrupt$sessions %>%
get_demand() %>% .[[2]],
curtail =  sc_results$curtail$sessions %>%
get_demand() %>% .[[2]],
) %>%
dyplot(ylab = "Power demand (kW)", legend_width = 200, strokeWidth = 2) %>%
dySeries("original", "Original HomeEV", color = "gray", strokePattern = "dashed") %>%
dySeries("setpoint", "Optimal setpoint", color = "black", strokePattern = "dashed")
sum(ev_sessions$Energy)
sum(ev_sessions$Energy)
sum(sc_results$postpone$sessions$Energy)
sum(sc_results$interrupt$sessions$Energy)
sum(sc_results$curtail$sessions$Energy)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "interrupt",
window_days = 1,
window_start_hour = 6
)
ev_sessions %>%
select(Session, EnergyRequired = Energy) %>%
left_join(
sc_results$sessions %>%
group_by(Session) %>%
summarise(EnergyCharged = Energy)
) %>%
mutate(
PctEnergyCharged = EnergyCharged/EnergyRequired
)
ev_sessions %>%
select(Session, EnergyRequired = Energy)
sc_results$sessions
ev_sessions %>%
select(Session, EnergyRequired = Energy) %>%
left_join(
sc_results$sessions %>%
group_by(Session) %>%
summarise(EnergyCharged = sum(Energy))
) %>%
mutate(
PctEnergyCharged = EnergyCharged/EnergyRequired
)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "interrupt",
window_days = 1,
window_start_hour = 6,
include_log = T
)
devtools::load_all(".")
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "interrupt",
window_days = 1,
window_start_hour = 6,
include_log = T
)
ev_sessions %>%
select(Session, EnergyRequired = Energy) %>%
left_join(
sc_results$sessions %>%
group_by(Session) %>%
summarise(EnergyCharged = sum(Energy))
) %>%
mutate(
PctEnergyCharged = EnergyCharged/EnergyRequired
)
scs <- sc_results$sessions
View(scs)
10.62/.17
devtools::load_all(".")
scs <- sc_results$sessions
ev_sessions %>%
select(Session, EnergyRequired = Energy) %>%
left_join(
sc_results$sessions %>%
group_by(Session) %>%
summarise(EnergyCharged = sum(Energy))
) %>%
mutate(
PctEnergyCharged = EnergyCharged/EnergyRequired
)
sc_results <- ev_sessions %>%
smart_charging(
opt_data = opt_data %>% rename(static = building),
opt_objective = "grid",
method = "interrupt",
window_days = 1,
window_start_hour = 6,
include_log = T
)
scs <- sc_results$sessions
ev_sessions %>%
select(Session, EnergyRequired = Energy) %>%
left_join(
sc_results$sessions %>%
group_by(Session) %>%
summarise(EnergyCharged = sum(Energy))
) %>%
mutate(
PctEnergyCharged = EnergyCharged/EnergyRequired
)
devtools::load_all(".")
